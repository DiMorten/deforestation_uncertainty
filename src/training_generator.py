import numpy as np
import tensorflow as tf



def batch_generator(batches, image, reference, target_size, number_class):
    """Take as input a Keras ImageGen (Iterator) and generate random
    crops from the image batches generated by the original iterator.
    """
    image = image.reshape(-1, image.shape[-1])
    reference = reference.reshape(reference.shape[0]*reference.shape[1])
    while True:
        batch_x, batch_y = next(batches)
        batch_x = np.squeeze(batch_x.astype('int64'))
        #print(batch_x.shape)
        batch_img = np.zeros((batch_x.shape[0], target_size, target_size, image.shape[-1]))
        batch_ref = np.zeros((batch_x.shape[0], target_size, target_size, number_class))
        
        for i in range(batch_x.shape[0]):
            # print("batch_x", batch_x[i][:10, :10])	
        
            n_augmentations = 6
            augmentation_id = np.random.choice(n_augmentations)
            if augmentation_id == 0:
                batch_x[i] = np.rot90(batch_x[i], 1)

            if augmentation_id == 1:
                batch_x[i] = np.rot90(batch_x[i], 2)

            if augmentation_id == 2:
                batch_x[i] = np.rot90(batch_x[i], 3)

            if augmentation_id == 3:
                batch_x[i] = np.flip(batch_x[i], 0)

            if augmentation_id == 4:
                batch_x[i] = np.flip(batch_x[i], 1)
                
            if augmentation_id == 5:
                batch_x[i] = batch_x[i]
                
            batch_img[i] = image[batch_x[i]] 
            batch_ref[i] = tf.keras.utils.to_categorical(reference[batch_x[i]] , number_class)
                       
        yield (batch_img, batch_ref)


'''
n_augmentations = 4
augmentation_id = np.random.choice(n_augmentations)
if augmentation_id == 0:
    batch_x[i] = np.rot90(batch_x[i], 1)
    
if augmentation_id == 1:
    batch_x[i] = np.flip(batch_x[i], 0)

if augmentation_id == 2:
    batch_x[i] = np.flip(batch_x[i], 1)
    
if augmentation_id == 3:
    batch_x[i] = batch_x[i]
